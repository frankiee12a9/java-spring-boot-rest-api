# todas funcionalidades: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html
# Mais configuracoes: https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

# default server port
server.port=${SERVER_PORT:8081}

# logger
logging.level.root=info
spring.output.ansi.enabled=always
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=${DB_SHOW_SQL:true}

# POSTGRES
spring.datasource.hikari.maximum-pool-size=${DB_MAX_CONNECTIONS:5}
spring.datasource.url=jdbc:postgresql://${DB_URL:localhost:5432/note_api}
spring.datasource.username=${DB_USERNAME:cudayanh}
spring.datasource.password=${DB_PASSWORD:kien12a99}
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.javax.persistence.validation.mode=none
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# swagger
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

# security
token.expiration-in-hours=${TOKEN_EXPIRATION_IN_HOURS:120}
token.refresh.expiration-in-days=${REFRESH_TOKEN_EXPIRATION_IN_DAYS:7}
token.secret=${TOKEN_SECRET:secret}
server.servlet.session.cookie.name=API_EXAMPLE_SESSION_ID
server.servlet.session.cookie.path=/app
swagger.username=${SWAGGER_USERNAME:#{null}}
swagger.password=${SWAGGER_PASSWORD:#{null}}

# smtp configurations
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME:user}
spring.mail.password=${SMTP_PASSWORD:secret}

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true

# recovery email
recovery.minutes-to-expire=${MINUTES_TO_EXPIRE_RECOVERY_CODE:20}

# templates
spring.resources.cache.period=0
# spring.web.resources.cache.period=0  

# encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force-response=true

# locale
spring.web.locale=en
spring.messages.encoding=UTF-8
spring.messages.fallback-to-system-locale=false

# rate limit
spring.cache.jcache.config=classpath:ehcache.xml
bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].http-response-body={ "status": 249, "message": "Too many requests" }
bucket4j.filters[0].url=/api/*
bucket4j.filters[0].metrics.enabled=true
bucket4j.filters[0].metrics.tags[0].key=IP
bucket4j.filters[0].metrics.tags[0].expression=getRemoteAddr()
bucket4j.filters[0].strategy=first
bucket4j.filters[0].rate-limits[0].skip-condition=getRequestURI().contains('/swagger-ui') || getRequestURI().contains('/documentation')
bucket4j.filters[0].rate-limits[0].expression=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=${MAX_REQUESTS_PER_MINUTE:10}
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval=0
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=minutes